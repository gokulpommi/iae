CREATE TABLE amaster (
	amasterid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	areaname VARCHAR(40), 
	areacode VARCHAR(40), 
	mhcyn VARCHAR(10), 
	branchid VARCHAR(100), 
	PRIMARY KEY (amasterid)
);
CREATE TABLE areaaudittag ( areaaudittagid INTEGER NOT NULL, is_cancelled VARCHAR(100), unique_id_field VARCHAR(70), created_on DATETIME, created_by VARCHAR(100), modified_on DATETIME, modified_by VARCHAR(100), upstream_txview_ref_id INTEGER, post_tx_title VARCHAR(100), userid VARCHAR(100), projectid VARCHAR(100), ipadd VARCHAR(100), recid INTEGER, versionid VARCHAR(100), roleid VARCHAR(100), objectid VARCHAR(100), areapoint VARCHAR(100), mapdata VARCHAR(500), ragid VARCHAR(100), PRIMARY KEY (areaaudittagid) );
CREATE TABLE bgloaction (
	bgloactionid INTEGER NOT NULL, 
	username VARCHAR(100), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), latandlong TEXT, gdtae NUMERIC, gtime NUMBER, 
	PRIMARY KEY (bgloactionid)
);
CREATE TABLE branchmast (
	branchmastid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	branchname VARCHAR(100), branchid TEXT, 
	PRIMARY KEY (branchmastid)
);
CREATE TABLE cmfsactivity (
	cmfsactivityid INTEGER NOT NULL, 
	phi INTEGER, 
	dosage NUMERIC(10, 2), 
	cost INTEGER, 
	qty NUMERIC(10, 2), 
	targetpest VARCHAR(15), 
	spraydesc VARCHAR(10), 
	fromdays INTEGER, 
	todays INTEGER, 
	fstask VARCHAR(15), 
	fsstage VARCHAR(10), 
	spraytype VARCHAR(20), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), cropmasterid NUMBER, 
	PRIMARY KEY (cmfsactivityid)
);
CREATE TABLE cropcycle (
	cropcycleid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	branchid VARCHAR(100), 
	cropmastuid VARCHAR(100), 
	cropscheme VARCHAR(100), 
	crop VARCHAR(100), 
	PRIMARY KEY (cropcycleid)
);
CREATE TABLE cropmaster (
	cropmasterid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	branchid VARCHAR(20), 
	cropmastuid VARCHAR(20), 
	cropscheme VARCHAR(100), 
	crop VARCHAR(100), 
	PRIMARY KEY (cropmasterid)
);
CREATE TABLE cropplan (
	cropplanid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	subgroupid VARCHAR(100), csp1id NUMBER, cspuid NUMBER, 
	PRIMARY KEY (cropplanid)
);
CREATE TABLE cropscheme (
	cropschemeid INTEGER NOT NULL, 
	cropmasterid INTEGER, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), schemename TEXT, 
	PRIMARY KEY (cropschemeid)
);
CREATE TABLE croptype (
	croptypeid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	igdetailid INTEGER, 
	subgroupid VARCHAR(100), 
	PRIMARY KEY (croptypeid)
);
CREATE TABLE emparea (
	empareaid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	empmasterid INTEGER, 
	emparearow INTEGER, 
	agrprefix VARCHAR(40), 
	acode VARCHAR(20), 
	seqto INTEGER, 
	seqfrm INTEGER, 
	locid INTEGER, 
	emparea1 INTEGER, 
	empbranchid INTEGER, 
	validto DATE, 
	validfrom DATE, 
	activeyn VARCHAR(20), 
	PRIMARY KEY (empareaid)
);
CREATE TABLE empmaster (
	empmasterid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	employeename VARCHAR(100), type TEXT, seqfrom NUMBER, seqto NUMBER, mobno NUMBER, branchid INTEGER, lagrno NUMBER, 
	PRIMARY KEY (empmasterid)
);
CREATE TABLE euser (
	userid INTEGER NOT NULL, 
	username VARCHAR(100), 
	password VARCHAR(512), 
	repassword VARCHAR(512), 
	firstname VARCHAR(256), 
	lastname VARCHAR(256), 
	emailid VARCHAR(200), 
	createdon DATE, 
	enabled VARCHAR(20), 
	firstlogin VARCHAR(10), 
	projectid BIGINT, 
	eviewtype VARCHAR(30), 
	usertype VARCHAR(20), 
	mobilenumber BIGINT, 
	auvitid VARCHAR(100), 
	countrycode VARCHAR(150), 
	userphoto BLOB, 
	usersign BLOB, 
	rolename VARCHAR(50), 
	onesignalplayer_id VARCHAR(250), 
	imei_no BIGINT, enable_mobile VARCHAR(10), 
	PRIMARY KEY (userid)
);
CREATE TABLE expnd (
	expndid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (expndid)
);
CREATE TABLE frmalert (
	frmalertid INTEGER NOT NULL, 
	crpstatus VARCHAR(10), 
	ragid VARCHAR(100), 
	imgalert VARCHAR(100), 
	remarks VARCHAR(250), 
	affecteddate DATE, 
	affectedarea VARCHAR(100), 
	alerttype VARCHAR(100), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	rcdyld INTEGER, 
	expyld INTEGER, 
	devper TEXT, 
	sowdt DATE, 
	ccstatus VARCHAR(100), mobno NUMBER, 
	PRIMARY KEY (frmalertid)
);
CREATE TABLE frmmast1 (
	frmmast1id INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	lastcropcycle VARCHAR(10), 
	farmerno VARCHAR(255), 
	seqprefix VARCHAR(10), 
	sowingtype VARCHAR(20), 
	image3 VARCHAR(100), 
	image2 VARCHAR(100), 
	image1 VARCHAR(100), 
	adhaarno INTEGER, 
	areaname INTEGER, 
	sowingdate DATE, 
	farmername VARCHAR(100), 
	fathername VARCHAR(100), 
	mobno INTEGER, 
	village INTEGER, 
	cropname INTEGER, 
	cropscheme VARCHAR(200), 
	acres NUMERIC(10, 2), 
	agno VARCHAR(10), 
	mobileno INTEGER, 
	itemid INTEGER, 
	qty NUMERIC(20, 2), 
	branch INTEGER, 
	itemid2 INTEGER, 
	qty1 NUMERIC(20, 2), dynamicseq TEXT, 
	PRIMARY KEY (frmmast1id)
);
CREATE TABLE igdetail (
	igdetailid INTEGER NOT NULL, 
	subgroup VARCHAR(30), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), groupsidc TEXT, subgroupid TEXT, 
	PRIMARY KEY (igdetailid)
);
CREATE TABLE irrm1 (
	irrm1id INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), wefdate NUMERIC, 
	PRIMARY KEY (irrm1id)
);
CREATE TABLE irrm2 (
	irrm2id INTEGER NOT NULL, 
	irrm1id INTEGER NOT NULL, 
	itemid VARCHAR(100), 
	PRIMARY KEY (irrm2id), 
	FOREIGN KEY(irrm1id) REFERENCES irrm1 (irrm1id)
);
CREATE TABLE itemmaster (
	itemmasterid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	itemid VARCHAR(100), 
	subgroup VARCHAR(100), 
	subgroupsid VARCHAR(100), 
	priunit VARCHAR(100), 
	itemtype VARCHAR(100), 
	activeyn VARCHAR(100), 
	PRIMARY KEY (itemmasterid)
);
CREATE TABLE mastermap (
	moduleid INTEGER NOT NULL, 
	stname VARCHAR(60) NOT NULL, 
	ttname VARCHAR(60) NOT NULL, 
	url VARCHAR(60), 
	dependson VARCHAR(60), 
	orderno INTEGER, 
	wherecon VARCHAR(60), 
	modeofinsert VARCHAR(60), 
	action VARCHAR(60), 
	"view" VARCHAR(160), 
	button VARCHAR(60), 
	project_slug VARCHAR(60) NOT NULL, conditiontype VARCHAR(30), sync_type VARCHAR(30), sync_sql VARCHAR(2000), src_sqlite_tab VARCHAR(30), tabmapid INTEGER, 
	PRIMARY KEY (moduleid)
);
CREATE TABLE mastermapdetail (
	mastermapdetailid INTEGER NOT NULL, 
	moduleid INTEGER NOT NULL, 
	sfname VARCHAR(60) NOT NULL, 
	tfname VARCHAR(60) NOT NULL, 
	shortid INTEGER, 
	project_slug VARCHAR(60) NOT NULL, colmapid INTEGER, 
	PRIMARY KEY (mastermapdetailid), 
	FOREIGN KEY(moduleid) REFERENCES mastermap (moduleid)
);
CREATE TABLE mcontrol (
	mcontrolid INTEGER NOT NULL, 
	"key" VARCHAR(60) NOT NULL, 
	value VARCHAR(60) NOT NULL, 
	projectid BIGINT, 
	PRIMARY KEY (mcontrolid)
);
CREATE TABLE offlinemapstorage (
	offlinemapstorageid INTEGER NOT NULL, 
	latlong VARCHAR(500), 
	place VARCHAR(500), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (offlinemapstorageid)
);
CREATE TABLE payreqst (
	payreqstid INTEGER NOT NULL, 
	ragid VARCHAR(10), 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), amount NUMBER(20, 2), reqdt NUMERIC, 
	PRIMARY KEY (payreqstid)
);
CREATE TABLE prac (
	pracid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (pracid)
);
CREATE TABLE sprayactivity (
	sprayactivityid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	sprimg VARCHAR(100), 
	crpstatus VARCHAR(100), 
	ragid INTEGER, 
	remarks VARCHAR(100), 
	spraydate DATE, 
	sprayactivity VARCHAR(100), spstatus TEXT, 
	PRIMARY KEY (sprayactivityid)
);
CREATE TABLE tempfrmmast1 (
	tempfrmmast1id INTEGER NOT NULL, 
	agrno VARCHAR(100), 
	mobno INTEGER, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (tempfrmmast1id)
);
CREATE TABLE tests (
	testsid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	mobnumber INTEGER, 
	arage INTEGER, 
	arname VARCHAR(100), 
	photo VARCHAR(50), 
	PRIMARY KEY (testsid)
);
CREATE TABLE testtable (
	testtableid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (testtableid)
);
CREATE TABLE viewsq (
	viewsqid INTEGER NOT NULL, 
	objectid VARCHAR(100), 
	roleid VARCHAR(100), 
	versionid VARCHAR(100), 
	recid INTEGER, 
	ipadd VARCHAR(100), 
	projectid VARCHAR(100), 
	userid VARCHAR(100), 
	post_tx_title VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	modified_by VARCHAR(100), 
	modified_on DATETIME, 
	created_by VARCHAR(100), 
	created_on DATETIME, 
	unique_id_field VARCHAR(70), 
	is_cancelled VARCHAR(100), 
	PRIMARY KEY (viewsqid)
);
CREATE TABLE vmaster (
	vmasterid INTEGER NOT NULL, 
	is_cancelled VARCHAR(100), 
	unique_id_field VARCHAR(70), 
	created_on DATETIME, 
	created_by VARCHAR(100), 
	modified_on DATETIME, 
	modified_by VARCHAR(100), 
	upstream_txview_ref_id INTEGER, 
	post_tx_title VARCHAR(100), 
	userid VARCHAR(100), 
	projectid VARCHAR(100), 
	ipadd VARCHAR(100), 
	recid INTEGER, 
	versionid VARCHAR(100), 
	roleid VARCHAR(100), 
	objectid VARCHAR(100), 
	ll BLOB, 
	kms INTEGER, 
	district VARCHAR(120), 
	taluk VARCHAR(120), 
	hobli VARCHAR(120), 
	villagename VARCHAR(120), 
	areaname INTEGER, 
	branchid INTEGER, 
	areasid VARCHAR(100), 
	PRIMARY KEY (vmasterid)
);
